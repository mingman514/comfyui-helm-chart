apiVersion: apps/v1
kind: Deployment
metadata:
  name: comfyui-{{ .Values.name }}
  namespace: {{ .Values.namespace | default "default" | quote }}
spec:
  replicas: {{ .Values.replica | default 1 }}
  selector:
    matchLabels:
      app: comfyui-{{ .Values.name }}
  template:
    metadata:
      labels:
        app: comfyui-{{ .Values.name }}
    spec:
      {{- if .Values.nodeName }}
      nodeSelector:
        kubernetes.io/hostname: {{ .Values.nodeName }}
      {{- end }}
      initContainers:
      - name: setup-nfs-path
        image: busybox:latest
        command:
        - /bin/sh
        - -c
        - |
          BASE_DIR="/NFS/ComfyUI-Workspaces"
          NAME="{{ .Values.name }}"
          OVERWRITE="{{ .Values.overwrite | default "false" }}"

          # admin(base) 디렉토리 확인
          if [ ! -d "${BASE_DIR}/admin" ]; then
            echo "[ERROR] ComfyUI admin directory does not exist!"
            exit 1
          fi

          # 사용자 디렉토리 생성
          mkdir -p "${BASE_DIR}/${NAME}"

          # name이 'admin'이면 복사 불필요
          if [ "$NAME" = "admin" ]; then
            echo "[INFO] 'admin' workspace detected. Skipping base copy."
          elif [ ! -d "${BASE_DIR}/${NAME}/ComfyUI" ] || [ "$OVERWRITE" = "true" ]; then
            rm -rf "${BASE_DIR}/${NAME}/ComfyUI" > /dev/null 2>&1
            SIZE=$(du -hs "${BASE_DIR}/admin/ComfyUI" | cut -f1)
            echo "[INFO] Copying ComfyUI base directory (admin)... (Size: ${SIZE})"
            cp -ar "${BASE_DIR}/admin/ComfyUI" "${BASE_DIR}/${NAME}/ComfyUI"
            echo "[INFO] Copying ComfyUI base directory done."
          else
            echo "[INFO] ComfyUI directory already exists. Skipping copy."
          fi

        volumeMounts:
          - name: cui-nfs
            mountPath: /NFS
      containers:
      - name: comfyui-{{ .Values.name }}-ctr
        {{ if .Values.isOffline }}
        image: acryl-comfyui:v1.0
        command:
          - /bin/bash
          - -c
          - |
            echo "########################################"
            echo "[INFO] Starting ComfyUI..."
            echo "########################################"
    
            export PYTHONPYCACHEPREFIX="/comfyui-home/ComfyUI/.cache/pycache"
            export PIP_USER=true
            export PATH="${PATH}:/comfyui-home/ComfyUI/.local/bin"
            export PIP_ROOT_USER_ACTION=ignore
    
            cd /comfyui-home/ComfyUI

            /utils/patch_server.sh ./server.py {{ .Values.name }}  # ingress 접속 방식을 위해 frontend href 변경

            pip install -r requirements.txt
            python3 ./main.py --listen --port 8188 ${CLI_ARGS}
            sleep infinity

        {{- else }}
        image: yanwk/comfyui-boot:cu124-megapak
        command: ["/bin/sh", "-c", "sh /runner-scripts/entrypoint.sh; sleep infinity"] # Online
        {{- end }}
        imagePullPolicy: IfNotPresent
        ports:
          - containerPort: 8188
        startupProbe:
          httpGet:
            path: /
            port: 8188
          failureThreshold: 60   # 총 10분 동안 기다려줌 (60 * 10s)
          periodSeconds: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /
            port: 8188
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 5
        livenessProbe:
          httpGet:
            path: /
            port: 8188
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 5
        resources:
          requests:
            nvidia.com/gpu: 1
          limits:
            nvidia.com/gpu: 1
            #        env:
                #- name: CLI_ARGS
          #          value: "--output=/output"
        volumeMounts:
        - name: cui-nfs
          mountPath: /comfyui-home
          subPath: ComfyUI-Workspaces/{{ .Values.name }}
        - name: cui-nfs
          mountPath: /utils
          subPath: utils
      volumes:
      - name: cui-nfs
        persistentVolumeClaim:
          claimName: cui-nfs-{{ .Values.name }}-pvc
